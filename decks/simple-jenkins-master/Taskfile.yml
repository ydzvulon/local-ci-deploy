# https://taskfile.dev
# https://github.com/eea/eea.docker.jenkins.slave-dind
version: "3"

env: &merge_env
  DCVAR_JENCONDA_DIMG_ADDR: yairdar/jenconda:0.8.7-1634602016
  DCVAR_UI_JENKINS_PORT_EXT: "28082"

vars:
  <<: *merge_env
  docker_compose_yaml: docker-compose.yaml

tasks:
  append-dnd-server:
    desc: _
    cmds:
      - |-
        docker run -d --name=docker17 --hostname docker17 \
        --restart=always \
        --network net_cicd_net \
        -p "2375" \
        --privileged=true \
        docker:1.13-dind

  append-dnd-worker:
    desc: append dnd-worker to master for docker builds
    cmds:
      - |-
        docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        --privileged=true \
        --network net_cicd_net \
        --link docker17 \
        -e DOCKER_HOST=tcp://docker17:2375 \
        -e JAVA_OPTS="-Xmx2048m" \
        -e JENKINS_MASTER="http://jencondait.samexample.com:8080" \
        -e JENKINS_NAME="dnd-worker" \
        -e JENKINS_USER=tester \
        -e JENKINS_PASS=tester123 \
        -e JENKINS_RETRY="10" \
        yairdar/jen_dnd_worker:0.8.7-1634602016
  
  append-dnd-service:
    desc: append dnd-worker to master for docker builds
    cmds:
      - |-
        docker run -d --name agent_smith \
        -v /var/run/docker.sock:/var/run/docker.sock \
        --restart=always \
        --privileged=true \
        --network net_cicd_net \
        --link docker17 \
        -e DOCKER_HOST=tcp://docker17:2375 \
        -e JAVA_OPTS="-Xmx2048m" \
        -e JENKINS_MASTER="http://jencondait.samexample.com:8080" \
        -e JENKINS_NAME="dnd-worker" \
        -e JENKINS_USER=tester \
        -e JENKINS_PASS=tester123 \
        -e JENKINS_RETRY="10" \
        yairdar/jen_dnd_worker:0.8.7-1634602016
      

  append-worker:
    desc: append regular worker to master
    cmds:
      - |-
        docker run -d \
        --network net_cicd_net \
        -e JAVA_OPTS="-Xmx2048m" \
        -e JENKINS_MASTER="http://jencondait.samexample.com:8080" \
        -e JENKINS_NAME="worker" \
        -e JENKINS_USER=tester \
        -e JENKINS_PASS=tester123 \
        -e JENKINS_RETRY="10" \
        eeacms/jenkins-slave

  spin-up-flow:
    desc: restart componets
    cmds:
      - task: spin-down
        vars:
          safe_run: "true"
      - task: spin-up-flow.prepare
      - task: spin-up
      - task: show-urls

  show-env-ac:
    desc: show environment activate cmd
    silent: true
    cmds:
      - |-
        echo '
        export DCVAR_JENCONDA_DIMG_ADDR={{.DCVAR_JENCONDA_DIMG_ADDR}}
        export DCVAR_UI_JENKINS_PORT_EXT={{.DCVAR_UI_JENKINS_PORT_EXT}}
        '

  show-urls:
    desc: shows urls of services
    silent: true
    cmds: ['echo "{{._show_url_exp}}" ']
    vars:
      _show_url_exp: |-
        ui-jenkins-url: http://localhost:${DCVAR_UI_JENKINS_PORT_EXT}

  spin-up-flow.prepare:
    desc: _
    cmds:
      - echo "{{.TASK}} done deps"

  ensure-network:
    desc: _
    status:
    - docker network inspect net_cicd_net
    cmds:
    - docker network create -d bridge net_cicd_net

  wait-for-it.sh:
    desc: _
    silent: true
    preconditions:
    - sh: '[[ "{{.MYHOST__MYPORT}}" != "" ]]' 
      msg: var:MYHOST__MYPORT=required
    cmds:
      - |-
        #!/bin/bash
        set -e

        MYHOST__MYPORT={{.MYHOST__MYPORT}}

        attempt_counter=0
        max_attempts=${max_attempts:-30}
        period=${period:-5}

        until $(curl --output /dev/null --silent --head --fail http://${MYHOST__MYPORT}); do
            if [ ${attempt_counter} -eq ${max_attempts} ];then
              echo "Max attempts reached"
              echo "Failed to reach ${MYHOST__MYPORT} after ${max_attempts}"
              exit 1
            fi

            echo "... no response. will retry in ${period} sec."
            attempt_counter=$(($attempt_counter+1))
            sleep $period
        done
        echo "http://${MYHOST__MYPORT} is accessable"

  spin-up:
    desc: _
    deps:
      - task: ensure-network
    cmds:
      - docker-compose -f {{.docker_compose_yaml}} up  -d
      - task: wait-for-it.sh 
        vars: 
          MYHOST__MYPORT: localhost:28082

  spin-down:
    desc: _
    vars:
      rest_suff: "{{if .safe_run}}| true{{else}} {{end}}"
    cmds:
      - docker-compose -f {{.docker_compose_yaml}} down {{.rest_suff}} || true

  remove:
    desc: _
    cmds:
      - docker-compose -f {{.docker_compose_yaml}} down {{.rest_suff}} || true

  recreate:
    desc: _
    cmds:
      - task: remove
      - task: spin-up-flow
